{"version":3,"sources":["components/Logo.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","className","src","alt","App","useState","city","setCity","weather","setWeather","type","placeholder","onChange","e","target","value","onClick","event","fetch","then","response","json","result","console","log","main","xmlns","class","fill","viewBox","stroke","stroke-linecap","stroke-linejoin","stroke-width","d","icon","name","sys","country","temp","toFixed","description","temp_min","temp_max","humidity","wind","speed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAWeA,EATF,WACT,OACI,sBAAKC,UAAU,OAAf,UACI,oBAAIA,UAAU,YAAd,0BACA,qBAAKC,IAAI,aAAaC,IAAI,aC6DvBC,MAzDf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,KAcb,OACE,sBAAKR,UAAU,MAAf,UACE,cAAC,EAAD,IACA,iCAEE,sBAAKA,UAAU,YAAf,UACE,uBAAOS,KAAK,OAAOC,YAAY,iBAAiBV,UAAU,YAAYW,SAAU,SAAAC,GAAC,OAAIN,EAAQM,EAAEC,OAAOC,QAAQA,MAAOT,IAErH,qBAAKU,QAlBE,SAAAC,GACbC,MAAM,qDAAD,OAAsDZ,EAAtD,iEACJa,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAAG,GACJb,EAAWa,GACXf,EAAQ,IACRgB,QAAQC,IAAI,WAAYF,EAAOG,UAY3B,SACE,qBAAKC,MAAM,6BAA6BC,MAAM,qBAAqBC,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAA1G,SACE,sBAAMC,iBAAe,QAAQC,kBAAgB,QAAQC,eAAa,IAAIC,EAAE,uDAKrD,oBAAhB1B,EAAQiB,KACf,gCACE,sBAAKxB,UAAU,gBAAf,UACE,qBAAKA,UAAU,cAAeC,IAAG,2CAAsCM,EAAQA,QAAQ,GAAG2B,KAAzD,WAAwEhC,IAAI,iBAE7G,gCACE,oBAAGF,UAAU,cAAb,UAA4BO,EAAQ4B,KAApC,KAA4C5B,EAAQ6B,IAAIC,WACxD,oBAAGrC,UAAU,cAAb,UAA6BO,EAAQiB,KAAKc,KAAMC,QAAQ,GAAxD,YACA,mBAAGvC,UAAU,cAAb,SAA4BO,EAAQA,QAAQ,GAAGiC,oBAInD,qBAAKxC,UAAU,cAAf,SACE,sBAAKA,UAAU,OAAf,UACE,uDAAwBO,EAAQiB,KAAKiB,SAAUF,QAAQ,GAAvD,YACA,uDAAwBhC,EAAQiB,KAAKkB,SAAUH,QAAQ,GAAvD,YACA,+CAAehC,EAAQiB,KAAKmB,SAA5B,QACA,yCAAgC,IAApBpC,EAAQqC,KAAKC,OAAYN,QAAQ,GAA7C,mBAKH,UCjDEO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.53c9f8d5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className=\"logo\">\r\n            <h1 className=\"logoTitle\">MétéoW</h1>\r\n            <img src=\"./logo.png\" alt=\"logo\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Logo;","import './App.css';\nimport React, { useState } from 'react';  \nimport Logo from \"./components/Logo\";\n// import Home from './pages/Home';\n\n// background en fonction du temps\n\n// ville par défaut rodez\n// plusieurs jours\n\nfunction App() {\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = event => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&lang=fr&appid=0a9c6fb7410b7e7a62dfa930f6c55777`)\n    .then((response) => response.json())\n    .then(result => {\n      setWeather(result)\n      setCity('');\n      console.log('resultat', result.main);\n    });\n  }\n \n  return (\n    <div className=\"app\">\n      <Logo/>\n      <main>\n        {/* <Home/> */}\n        <div className=\"searchBox\">\n          <input type=\"text\" placeholder=\"Rechercher ...\" className=\"searchBar\" onChange={e => setCity(e.target.value)} value={city}/>\n          \n          <div onClick={search}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"searchIcon h-2 w-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n            </svg>\n          </div>\n        </div>\n\n        {(typeof weather.main != \"undefined\") ? (\n          <div>\n            <div className=\"globalWeather\">\n              <img className=\"weatherIcon\"  src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt=\"weather icon\"/>\n              \n              <div>\n                <p className=\"weatherCity\">{weather.name}, {weather.sys.country}</p>\n                <p className=\"weatherTemp\">{(weather.main.temp).toFixed(1)} °C</p>\n                <p className=\"weatherDesc\">{weather.weather[0].description}</p>\n              </div>\n            </div>\n\n            <div className=\"infoWeather\">\n              <div className=\"bloc\">\n                <p>Température min. : {(weather.main.temp_min).toFixed(1)} °C</p>\n                <p>Température max. : {(weather.main.temp_max).toFixed(1)} °C</p>\n                <p>Humidité : {weather.main.humidity} %</p>\n                <p>Vent : {(weather.wind.speed* 3.6).toFixed(1)} km/h</p>\n              </div>\n              \n            </div>\n        </div>\n        ) : ('')}\n      </main>\n    </div>\n  );  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}